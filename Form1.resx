<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAkAAAAO4AAADuAAAAjwAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAACPAAAA7gAAAO4AAACQAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAD/AAAA/wAAAP8AAAD/AAAAjQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQAAAP8AAAD/AAAA/wAAAP8AAACQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7QAAAP8AAAD/AAAA/wAA
        AP8AAADtAAAAgQAAAL4AAADmAAAA+QAAAPkAAADmAAAAvgAAAIEAAADtAAAA/wAAAP8AAAD/AAAA/wAA
        AO4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA7QAAAJUAAABMAAAAHQAAAAYAAAAGAAAAHQAAAEwAAACVAAAA7QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAAD/AAAA9gAAAH0AAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAMAAAAfQAAAPYAAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAgAAAD/AAAA/wAAAN8AAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAN8AAAD/AAAA/wAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAmQAAAP8AAADfAAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAzAAAAAAAAAAAAAAAAAAAAGwAAAN8AAAD/AAAAmQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAAD+AAAA9gAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAZgAAAP0AAACIAAAAAAAAAAAAAAAAAAAALgAAAPYAAAD+AAAAPwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwwAAAP8AAAB9AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAADpAAAA/wAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAfQAA
        AP8AAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8AAAD+AAAA7QAAAAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQAAAP8AAAC/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAMAAAA7QAAAP4AAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAAP8AAACVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcAAAD5AAAA/AAAAC8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACVAAAA/wAAAIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+AAAA/wAA
        AEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtQAAAP8AAACYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAD/AAAAvgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AOYAAAD/AAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEkAAAD/AAAA7wAA
        ABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAAP8AAADmAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA+QAAAP8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1QAA
        AP8AAABxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAA/wAAAPkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD6AAAA/wAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAD/AAAA+wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOcAAAD/AAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAA
        AP8AAADnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAP8AAABMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABMAAAA/wAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDAAAA/wAAAJUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJUAAAD/AAAAgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEAAAD/AAAA7QAA
        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
        AEABgAGAAGAGAAAf+ACAB+ABwA/wA+Af+Ac=
</value>
  </data>
</root>